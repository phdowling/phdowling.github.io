{"version":3,"sources":["components/Header.tsx","components/ContentPage.tsx","components/Home.tsx","components/Links.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","props","isPortrait","useMediaQuery","query","history","useHistory","handleClick","useCallback","push","style","width","margin","onClick","Object","entries","links","map","i","href","text","to","id","display","ContentPage","textAlign","children","Home","Links","App","className","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAkCeA,MA3Bf,SAAgBC,GACZ,IAAMC,EAAaC,wBAAc,CAAEC,MAAO,4BACpCC,EAAUC,cACVC,EAAcC,uBAChB,WACIH,EAAQI,KAAK,OAEjB,CAACJ,IAGL,OACI,sBAAKK,MAAO,CAACC,MAAOT,EAAY,MAAO,MAAOU,OAAQ,QAAtD,UACE,oBAAIC,QAASN,EAAb,6BACA,uBACA,8BACKO,OAAOC,QAAQd,EAAMe,OAAOC,KAAI,WAAeC,GAAf,uBAAEC,EAAF,KAAQC,EAAR,YAC/B,cAAC,IAAD,CAAMC,GAAIF,EAAMG,GAAIH,EAAOD,EAA3B,SACI,qBAAKR,MAAO,CAACE,OAAQ,OAAQW,QAAS,gBAAtC,SACKH,e,QCbVI,MATf,SAAqBvB,GACjB,IAAMC,EAAaC,wBAAc,CAAEC,MAAO,4BAC1C,OACE,qBAAKM,MAAO,CAACC,MAAOT,EAAY,MAAO,MAAOuB,UAAW,OAAQb,OAAQ,QAAzE,SACGX,EAAMyB,YCaAC,MARf,WACI,OACE,cAAC,EAAD,UACI,cAAC,IAAD,UAZG,mcCUEC,MARf,WACI,OACE,cAAC,EAAD,UACE,cAAC,IAAD,UALK,mBCsDEC,MA3Cf,WACE,OACE,qBAAKC,UAAU,MAAf,SACA,eAAC,IAAD,WACE,cAAC,EAAD,CAAQd,MAAO,CAAC,IAAK,OAAQ,SAAU,WACvC,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,iBCXGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8f57112c.chunk.js","sourcesContent":["import { useCallback } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { Link, useHistory } from \"react-router-dom\";\n\ninterface HeaderProps {\n    links: {[href: string]: string};\n}\nfunction Header(props: HeaderProps) {    \n    const isPortrait = useMediaQuery({ query: '(orientation: portrait)' })\n    const history = useHistory();\n    const handleClick = useCallback(\n        () => {\n            history.push(\"/\");\n        },\n        [history],\n    );\n\n    return (\n        <div style={{width: isPortrait? \"90%\": \"80%\", margin: \"auto\"}}>\n          <h1 onClick={handleClick}>Philipp Dowling</h1>\n          <hr/>\n          <div>\n              {Object.entries(props.links).map(([href, text], i) => (\n                <Link to={href} id={href + i}>\n                    <div style={{margin: \"10px\", display: \"inline-block\"}}>\n                        {text}\n                    </div>\n                </Link>\n              ))}\n          </div>\n        </div>\n    );\n}\n\nexport default Header;\n    ","import React from \"react\";\nimport { useMediaQuery } from 'react-responsive'\n\nfunction ContentPage(props: {children: React.ReactNode}) {\n    const isPortrait = useMediaQuery({ query: '(orientation: portrait)' })\n    return (\n      <div style={{width: isPortrait? \"90%\": \"70%\", textAlign: \"left\", margin: \"auto\"}}>\n        {props.children}\n      </div>\n    );\n}\n\nexport default ContentPage;","import ReactMarkdown from \"react-markdown\";\nimport ContentPage from \"./ContentPage\";\n\nconst content = `# About me\nI'm a product manager currently working on solutions at the intersection of:\n\n- data integration\n- visual analysis\n- investigations in cybersecurity, fraud, AML, dark web and related areas.\n\nI'm also interested in natural language processing, machine learning, knowledge graphs and the different ways these can be leveraged to build tools that help us to better understand of the world, as well as to map that understanding. `;\n\nfunction Home() {\n    return (\n      <ContentPage>\n          <ReactMarkdown>{content}</ReactMarkdown>\n      </ContentPage>\n    );\n}\n\nexport default Home;","import ReactMarkdown from \"react-markdown\";\nimport ContentPage from \"./ContentPage\";\n\nconst content = `Nothing yet`;\n\nfunction Links() {\n    return (\n      <ContentPage>\n        <ReactMarkdown>{content}</ReactMarkdown>\n      </ContentPage>\n    );\n}\n\nexport default Links;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport Links from './components/Links';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Router>\n      <Header links={{\"/\": \"Home\", \"/links\": \"Links\"}}/>\n      <div> \n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/links\">\n            <Links />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n    </div>\n  );\n}\n\n\n/*function App() {\n  return (\n    <div className=\"App\">\n        <Header/>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}*/\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}