{"version":3,"sources":["components/Header.tsx","components/ContentPage.tsx","components/Home.tsx","components/Links.tsx","components/Footer.tsx","components/Contact.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","props","isPortrait","useMediaQuery","query","style","width","margin","to","className","Object","entries","links","map","i","href","text","display","ContentPage","children","height","NoRefLink","rel","color","textDecoration","Home","components","a","items","header","subheader","DownloadItem","content","target","Links","item","key","Footer","Contact","title","src","background","border","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a0a488b.chunk.js","sourcesContent":["import { useCallback } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { Link, useHistory } from \"react-router-dom\";\n\ninterface HeaderProps {\n    links: {[href: string]: string};\n}\nfunction Header(props: HeaderProps) {    \n    const isPortrait = useMediaQuery({ query: '(orientation: portrait)' });\n\n    return (    \n        <div style={{width: isPortrait? \"85%\": \"50%\", margin: \"auto\"}}>\n          <Link to=\"/\" className=\"AppLink\">\n            <h1 >Philipp Dowling</h1>\n          </Link>\n          <hr/>\n          <div>\n              {Object.entries(props.links).map(([href, text], i) => (\n                <Link className=\"AppLink\" to={href} key={href + i}>\n                    <div style={{margin: \"10px\", display: \"inline-block\"}}>\n                        {text}\n                    </div>\n                </Link>\n              ))}\n          </div>\n        </div>\n    );\n}\n\nexport default Header;\n    ","import React from \"react\";\nimport { useMediaQuery } from 'react-responsive'\n\nfunction ContentPage(props: {children: React.ReactNode}) {\n    const isPortrait = useMediaQuery({ query: '(orientation: portrait)' })\n    return (\n        <div className=\"ContentPage\" >\n            <div style={{width: isPortrait? \"90%\": \"70%\", margin: \"auto\"}}>\n                {props.children}\n                <div style={{height: \"30px\"}}/>\n            </div>\n        </div>\n    );\n}\n\nfunction NoRefLink(props: any) {\n    return (\n        <a \n          href={props.href} \n          rel=\"noreferrer\" \n          style={{color: \"black\", textDecoration: \"none\"}}>\n            {props.children}\n        </a>);\n};\n\nexport {ContentPage, NoRefLink};","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport {ContentPage, NoRefLink} from \"./ContentPage\";\n\nconst content = `## About me\nI currently manage the product team at **[Y42](https://y42.com)**, working on building a next-generation data platform that anyone can run.\n\nSome topics I've worked on and/or have an interest in:\n- data integration, pipelines, analytics, automation and operationalization\n- natural language processing, machine learning and knowledge graphs\n- OSINT, cybersecurity operations, fraud, AML, dark web and other investigative areas\n\nI'm especially interested in the intersection of these areas and how these tools can be leveraged to build systems that help us to both better understand the world\nas well as to map that understanding.\n\nIn the past, I worked on integrations and data product at [Maltego](maltego.com), co-founded **[metris.io](https://metris.io/)** \nand before that, I was working on NLP research around distributional semantic representation of text.\n`;\n\nfunction Home() {\n    return (\n      <ContentPage>\n          <ReactMarkdown components={{a: NoRefLink}}>{content}</ReactMarkdown>\n      </ContentPage>\n    );\n}\n\nexport default Home;\n","import { useMemo } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport {ContentPage, NoRefLink} from \"./ContentPage\";\n\nconst content = `## Links\n- [Github](https://github.com/phdowling)\n- [LinkedIn](https://www.linkedin.com/in/philippdowling/)`;\n\nconst items = [{\n    header: \"Master's thesis\",\n    subheader: \"Effective and Scalable Sentence Representation through Dynamic Grassmannian Ellipsoids\",\n    text: `This work was my M.Sc. thesis at TUM, completed in part during a research visit at Stanford University. I worked on applying Grassmannian embeddings to semantic sentence representation and on methods to efficiently search over these representations.\n\nI found that subspace bases computed over word vectors (from e.g. FastText or Word2Vec) are much more effective \nrepresentations than weighted averages of such vectors, \nand that treating the bases as ellipsoids works even better. \nSince they're more complex structures than vectors, however, it also turns out these representations \nare much more expensive to search through at scale. The work also offers some approaches for dealing with this.\n    \nCode for the model and experiments is available on **[github](https://github.com/phdowling/dynamic-grassmannian-ellipsoids)**.`,\n    href: \"/static/msc-thesis-final.pdf\"\n}];\n\nfunction DownloadItem(props: {header: string, subheader: string, text: string, href: string}){\n    const content = `### ${props.header}\\n#### _${props.subheader}_\\n${props.text}`;\n    return (\n        <div className=\"DownloadItem\">\n            <ReactMarkdown components={{a: NoRefLink}}>{content}</ReactMarkdown>\n              <div className=\"DownloadButtonContainer\"><a \n                className=\"DownloadButtonA\"\n                href={props.href} \n                target=\"_blank\" \n                rel=\"noreferrer\"\n                style={{textDecoration: \"none\", color: \"black\"}}>\n                    Download\n              </a>\n              </div>\n        </div>\n    )\n}\n\nfunction Links() {\n    return (\n      <ContentPage>\n        <h2>Downloads</h2>\n        {items.map((item, i) => <DownloadItem {...item} key={\"downloaditem_\" + i}/>)}\n        <ReactMarkdown components={{a: NoRefLink}}>{content}</ReactMarkdown>\n      </ContentPage>\n    );\n}\n\nexport default Links;","function Footer(){\n    return (\n        <footer className=\"Footer\">\n            Â©2021 by Philipp Dowling\n        </footer>\n    );\n}\n\nexport default Footer;","import ReactMarkdown from \"react-markdown\";\nimport { useMediaQuery } from \"react-responsive\";\nimport {ContentPage} from \"./ContentPage\";\n\nconst content = `\nIf you'd like to get in touch with me, simply fill out the form below.\n`;\n\nfunction Contact(){\n    return (\n        <ContentPage>\n          <ReactMarkdown>{content}</ReactMarkdown>\n            <iframe \n              title=\"airtable-contact-form\"\n              className=\"airtable-embed\" \n              src=\"https://airtable.com/embed/shrLBfPGailzVgiWV?backgroundColor=purple\" \n              width=\"100%\"\n              height=\"790px\"\n              style={{background: \"transparent\", border: \"1px solid #ccc\", display: \"block\"}}>\n            </iframe>\n        </ContentPage>\n    )\n}\n\nexport default Contact;","import './App.css';\nimport Header from './components/Header';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport Links from './components/Links';\nimport Footer from './components/Footer';\nimport Contact from './components/Contact';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Router>\n      <Header links={{\"/\": \"Home\", \"/links\": \"Links\", \"/contact\": \"Contact\"}}/>\n      <div className=\"MainContent\"> \n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/links\">\n            <Links />\n          </Route>\n          <Route path=\"/contact\">\n            <Contact />\n          </Route>\n        </Switch>\n      </div>\n      <Footer/>\n     </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}